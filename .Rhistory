df <- read.csv("Лучший мультфильм.csv", sep=";", header = T,fileEncoding = "cp1251")
View(df)
getwd()
df<-read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
View(df)
num_idx <- which(sapply(df, is.numeric))
# №1. max, min, mean по всем столбцам
sapply(na.omit(df[, num_idx]), max)
sapply(na.omit(df[, num_idx]), min)
means <- sapply(na.omit(df[, num_idx]), mean)
means
# №2. Подсчитать количество людей, отдавших предпочтение >0.7 и <0.3
more_than_7 <- integer(length(num_idx))
less_than_3 <- integer(length(num_idx))
more_than_7 <- sapply(df[, num_idx], function(x) length(which(x > 7)))
less_than_3 <- sapply(df[, num_idx], function(x) length(which(x < 3)))
more_than_7
less_than_3
# №3. Рейтинг жанров по убыванию
idxes <- order(means, decreasing=T)
idxes <- sapply(idxes, function (x) x <- colnames(df)[x + 2])
data.frame('Рейтинг_жанров'=idxes)
# №4. Столбчатая диаграмма оценок
library(ggplot2)
# genre <- readline(prompt = 'Диаграмму оценок какого жанра хотите посмотреть? ')
# # сделать первую букву заглавной
# genre <- gsub(' ', '',
#               paste(toupper(substr(genre, 1, 1)), substr(genre, 2, nchar(genre))))
# оставить только фамилию
# surnames <- df[, 2]
# for (i in 1 : nrow(df))
# {
#   first_space <- as.vector(gregexpr(' ', df[i, 2]))[[1]][1]
#   first_space
#   surnames[i] <- substr(df[i, 2], 1,
#                      first_space - 1)
# }
# диаграмма
pl_df <- data.frame(x=colnames(df[, num_idx]), y=means)
# скип строк с NA
pl_df <- pl_df[complete.cases(pl_df), ]
perf <-ggplot(pl_df, aes(x, y, fill = x)) +
geom_bar(stat="identity", show.legend = F)
perf
# genre_str <- paste("Оценки жанра", tolower(genre))
ggp <- perf + labs(x="Жанр",y="Оценка", title='Средняя оценка жанров музыки')
ggp
df<-read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
View(df)
num_idx <- which(sapply(df, is.numeric))
# №1. max, min, mean по всем столбцам
sapply(na.omit(df[, num_idx]), max)
sapply(na.omit(df[, num_idx]), min)
means <- sapply(na.omit(df[, num_idx]), mean)
means
# №2. Подсчитать количество людей, отдавших предпочтение >0.7 и <0.3
more_than_7 <- integer(length(num_idx))
less_than_3 <- integer(length(num_idx))
more_than_7 <- sapply(df[, num_idx], function(x) length(which(x > 7)))
less_than_3 <- sapply(df[, num_idx], function(x) length(which(x < 3)))
more_than_7
less_than_3
# №3. Рейтинг мультфильмов по убыванию
idxes <- order(means, decreasing=T)
idxes <- sapply(idxes, function (x) x <- colnames(df)[x + 2])
data.frame('Рейтинг_мультфильмов'=idxes)
# №4. Столбчатая диаграмма оценок
library(ggplot2)
# genre <- readline(prompt = 'Диаграмму оценок какого мультфильма хотите посмотреть? ')
# # сделать первую букву заглавной
# genre <- gsub(' ', '',
#               paste(toupper(substr(genre, 1, 1)), substr(genre, 2, nchar(genre))))
# оставить только фамилию
# surnames <- df[, 2]
# for (i in 1 : nrow(df))
# {
#   first_space <- as.vector(gregexpr(' ', df[i, 2]))[[1]][1]
#   first_space
#   surnames[i] <- substr(df[i, 2], 1,
#                      first_space - 1)
# }
# диаграмма
pl_df <- data.frame(x=colnames(df[, num_idx]), y=means)
# пропуск строк с NA
pl_df <- pl_df[complete.cases(pl_df), ]
perf <-ggplot(pl_df, aes(x, y, fill = x)) +
geom_bar(stat="identity", show.legend = F)
perf
# genre_str <- paste("Оценки мультфильма", tolower(genre))
ggp <- perf + labs(x="Мультфильм",y="Оценка", title='Средняя оценка мультифильма')
ggp
# 1. Выполнить учебный импорт любых таблиц данных из csv-файла и xls-таблицы.
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
library(readxl)
test_data <- read_excel("test.xls", sheet = "test"); test_data
# 2. Выполнить дескриптивный анализ данных из ЛР №2.
num_idx <- which(sapply(df, is.numeric))
hist(df$Тачки, main="Гистограмма по столбцу Тачки", xlab="Оценки",
ylab="Частота", col = rainbow(6))
boxplot(df[, num_idx], main='Коробчатые диаграммы мультфильмов',
xlab='Фильмы', ylab='Оценки', col=rainbow(11))
summary(df)
# 3. Выполнить сортировку наборов данных по выбранному признаку.
df_sorted <- df[order(df$Рок, decreasing = T), ]; View(df_sorted)
# 1. Выполнить учебный импорт любых таблиц данных из csv-файла и xls-таблицы.
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
library(readxl)
test_data <- read_excel("test.xls", sheet = "test"); test_data
# 2. Выполнить дескриптивный анализ данных из ЛР №2.
num_idx <- which(sapply(df, is.numeric))
hist(df$Тачки, main="Гистограмма по столбцу Тачки", xlab="Оценки",
ylab="Частота", col = rainbow(6))
boxplot(df[, num_idx], main='Коробчатые диаграммы мультфильмов',
xlab='Фильмы', ylab='Оценки', col=rainbow(11))
summary(df)
# 3. Выполнить сортировку наборов данных по выбранному признаку.
df_sorted <- df[order(df$Тачки, decreasing = T), ]; View(df_sorted)
# 4.	Сформировать отдельные наборы данных по одинаковому признаку
#(например, составить subdataset, из студентов, отдавших предпочтение по
# шкале > 7 определенной книге), вывести результат,  выполнить подсчет
# размерностей новых таблиц, снова выполнить их анализ –
#гистограмма, боксплот, серединные меры
cars_more_than_6 <- subset(df, Тачки > 6); cars_more_than_6
dim(cars_more_than_6)
attach(cars_more_than_6)
hist(Тачки, main="Гистограмма по столбцу Тачки, оценки > 6", xlab="Оценки",
ylab="Частота", col = rainbow(4))
boxplot(Синтвейв, main='Коробчатая диаграмма фильма Тачки',
xlab='Тачки', ylab='Оценки', col=rainbow(1))
# 1. Выполнить учебный импорт любых таблиц данных из csv-файла и xls-таблицы.
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
library(readxl)
test_data <- read_excel("test.xls", sheet = "test"); test_data
# 2. Выполнить дескриптивный анализ данных из ЛР №2.
num_idx <- which(sapply(df, is.numeric))
hist(df$Тачки, main="Гистограмма по столбцу Тачки", xlab="Оценки",
ylab="Частота", col = rainbow(6))
boxplot(df[, num_idx], main='Коробчатые диаграммы мультфильмов',
xlab='Фильмы', ylab='Оценки', col=rainbow(11))
summary(df)
# 3. Выполнить сортировку наборов данных по выбранному признаку.
df_sorted <- df[order(df$Тачки, decreasing = T), ]; View(df_sorted)
# 4.	Сформировать отдельные наборы данных по одинаковому признаку
#(например, составить subdataset, из студентов, отдавших предпочтение по
# шкале > 7 определенной книге), вывести результат,  выполнить подсчет
# размерностей новых таблиц, снова выполнить их анализ –
#гистограмма, боксплот, серединные меры
cars_more_than_6 <- subset(df, Тачки > 6); cars_more_than_6
dim(cars_more_than_6)
attach(cars_more_than_6)
hist(Тачки, main="Гистограмма по столбцу Тачки, оценки > 6", xlab="Оценки",
ylab="Частота", col = rainbow(4))
boxplot(Тачки, main='Коробчатая диаграмма фильма Тачки',
xlab='Тачки', ylab='Оценки', col=rainbow(1))
mean(Тачки)
median(Тачки)
detach(cars_more_than_6)
# 1. Выполнить учебный импорт любых таблиц данных из csv-файла и xls-таблицы.
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
library(readxl)
test_data <- read_excel("test.xls", sheet = "test"); test_data
# 2. Выполнить дескриптивный анализ данных из ЛР №2.
num_idx <- which(sapply(df, is.numeric))
hist(df$Тачки, main="Гистограмма по столбцу Тачки", xlab="Оценки",
ylab="Частота", col = rainbow(6))
boxplot(df[, num_idx], main='Коробчатые диаграммы мультфильмов',
xlab='Фильмы', ylab='Оценки', col=rainbow(11))
summary(df)
# 3. Выполнить сортировку наборов данных по выбранному признаку.
df_sorted <- df[order(df$Тачки, decreasing = T), ]; View(df_sorted)
# 4.	Сформировать отдельные наборы данных по одинаковому признаку
#(например, составить subdataset, из студентов, отдавших предпочтение по
# шкале > 7 определенной книге), вывести результат,  выполнить подсчет
# размерностей новых таблиц, снова выполнить их анализ –
#гистограмма, боксплот, серединные меры
cars_more_than_6 <- subset(df, Тачки > 6); cars_more_than_6
dim(cars_more_than_6)
attach(cars_more_than_6)
hist(Тачки, main="Гистограмма по столбцу Тачки, оценки > 6", xlab="Оценки",
ylab="Частота", col = rainbow(4))
boxplot(Тачки, main='Коробчатая диаграмма фильма Тачки',
xlab='Тачки', ylab='Оценки', col=rainbow(1))
mean(Тачки)
median(Тачки)
detach(cars_more_than_6)
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
View(df)
View(df)
# 1. Выполнить учебный импорт любых таблиц данных из csv-файла и xls-таблицы.
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
library(readxl)
test_data <- read_excel("test.xls", sheet = "test"); test_data
# 2. Выполнить дескриптивный анализ данных из ЛР №2.
num_idx <- which(sapply(df, is.numeric))
hist(df$Тачки, main="Гистограмма по столбцу Тачки", xlab="Оценки",
ylab="Частота", col = rainbow(6))
boxplot(df[, num_idx], main='Коробчатые диаграммы мультфильмов',
xlab='Фильмы', ylab='Оценки', col=rainbow(11))
summary(df)
# 3. Выполнить сортировку наборов данных по выбранному признаку.
df_sorted <- df[order(df$Тачки, decreasing = T), ]; View(df_sorted)
# 4.	Сформировать отдельные наборы данных по одинаковому признаку
#(например, составить subdataset, из студентов, отдавших предпочтение по
# шкале > 7 определенной книге), вывести результат,  выполнить подсчет
# размерностей новых таблиц, снова выполнить их анализ –
#гистограмма, боксплот, серединные меры
cars_more_than_6 <- subset(df, Тачки > 6); cars_more_than_6
dim(cars_more_than_6)
attach(cars_more_than_6)
hist(Тачки, main="Гистограмма по столбцу Тачки, оценки > 6", xlab="Оценки",
ylab="Частота", col = rainbow(4))
boxplot(Тачки, main='Коробчатая диаграмма фильма Тачки',
xlab='Тачки', ylab='Оценки', col=rainbow(1))
mean(Тачки)
median(Тачки)
detach(cars_more_than_6)
cars_more_than_6
cars_more_than_6 <- subset(df, Суперсемейка > 6); cars_more_than_6
# 1. Выполнить учебный импорт любых таблиц данных из csv-файла и xls-таблицы.
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
library(readxl)
test_data <- read_excel("test.xls", sheet = "test"); test_data
# 2. Выполнить дескриптивный анализ данных из ЛР №2.
num_idx <- which(sapply(df, is.numeric))
hist(df$Тачки, main="Гистограмма по столбцу Тачки", xlab="Оценки",
ylab="Частота", col = rainbow(6))
boxplot(df[, num_idx], main='Коробчатые диаграммы мультфильмов',
xlab='Фильмы', ylab='Оценки', col=rainbow(11))
summary(df)
# 3. Выполнить сортировку наборов данных по выбранному признаку.
df_sorted <- df[order(df$Тачки, decreasing = T), ]; View(df_sorted)
# 4.	Сформировать отдельные наборы данных по одинаковому признаку
#(например, составить subdataset, из студентов, отдавших предпочтение по
# шкале > 7 определенной книге), вывести результат,  выполнить подсчет
# размерностей новых таблиц, снова выполнить их анализ –
#гистограмма, боксплот, серединные меры
cars_more_than_6 <- subset(df, Суперсемейка > 6); cars_more_than_6
dim(cars_more_than_6)
attach(cars_more_than_6)
hist(Тачки, main="Гистограмма по столбцу Тачки, оценки > 6", xlab="Оценки",
ylab="Частота", col = rainbow(4))
boxplot(Тачки, main='Коробчатая диаграмма фильма Тачки',
xlab='Тачки', ylab='Оценки', col=rainbow(1))
mean(Тачки)
median(Тачки)
detach(cars_more_than_6)
# 1. Выполнить учебный импорт любых таблиц данных из csv-файла и xls-таблицы.
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
library(readxl)
test_data <- read_excel("test.xls", sheet = "test"); test_data
# 2. Выполнить дескриптивный анализ данных из ЛР №2.
num_idx <- which(sapply(df, is.numeric))
hist(df$Тачки, main="Гистограмма по столбцу Тачки", xlab="Оценки",
ylab="Частота", col = rainbow(6))
boxplot(df[, num_idx], main='Коробчатые диаграммы мультфильмов',
xlab='Фильмы', ylab='Оценки', col=rainbow(11))
summary(df)
# 3. Выполнить сортировку наборов данных по выбранному признаку.
df_sorted <- df[order(df$Тачки, decreasing = T), ]; View(df_sorted)
# 4.	Сформировать отдельные наборы данных по одинаковому признаку
#(например, составить subdataset, из студентов, отдавших предпочтение по
# шкале > 7 определенной книге), вывести результат,  выполнить подсчет
# размерностей новых таблиц, снова выполнить их анализ –
#гистограмма, боксплот, серединные меры
cars_more_than_6 <- subset(df, Суперсемейка > 6); cars_more_than_6
dim(cars_more_than_6)
attach(cars_more_than_6)
hist(Тачки, main="Гистограмма по столбцу Тачки, оценки > 6", xlab="Оценки",
ylab="Частота", col = rainbow(4))
boxplot(Тачки, main='Коробчатая диаграмма фильма Тачки',
xlab='Тачки', ylab='Оценки', col=rainbow(1))
mean(Тачки)
median(Тачки)
detach(cars_more_than_6)
# 1. Выполнить учебный импорт любых таблиц данных из csv-файла и xls-таблицы.
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
library(readxl)
test_data <- read_excel("test.xls", sheet = "test"); test_data
# 2. Выполнить дескриптивный анализ данных из ЛР №2.
num_idx <- which(sapply(df, is.numeric))
hist(df$Суперсемейка, main="Гистограмма по столбцу Суперсемейка", xlab="Оценки",
ylab="Частота", col = rainbow(6))
boxplot(df[, num_idx], main='Коробчатые диаграммы мультфильмов',
xlab='Фильмы', ylab='Оценки', col=rainbow(11))
summary(df)
# 3. Выполнить сортировку наборов данных по выбранному признаку.
df_sorted <- df[order(df$Суперсемейка, decreasing = T), ]; View(df_sorted)
# 4.	Сформировать отдельные наборы данных по одинаковому признаку
#(например, составить subdataset, из студентов, отдавших предпочтение по
# шкале > 7 определенной книге), вывести результат,  выполнить подсчет
# размерностей новых таблиц, снова выполнить их анализ –
#гистограмма, боксплот, серединные меры
cars_more_than_6 <- subset(df, Суперсемейка > 6); cars_more_than_6
dim(cars_more_than_6)
attach(cars_more_than_6)
hist(Суперсемейка, main="Гистограмма по столбцу Суперсемейка, оценки > 6", xlab="Оценки",
ylab="Частота", col = rainbow(4))
boxplot(Суперсемейка, main='Коробчатая диаграмма фильма Суперсемейка',
xlab='Тачки', ylab='Оценки', col=rainbow(1))
mean(Суперсемейка)
median(Суперсемейка)
detach(cars_more_than_6)
# 1. Выполнить учебный импорт любых таблиц данных из csv-файла и xls-таблицы.
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
library(readxl)
test_data <- read_excel("test.xls", sheet = "test"); test_data
# 2. Выполнить дескриптивный анализ данных из ЛР №2.
num_idx <- which(sapply(df, is.numeric))
hist(df$Тачки, main="Гистограмма по столбцу Тачки", xlab="Оценки",
ylab="Частота", col = rainbow(6))
boxplot(df[, num_idx], main='Коробчатые диаграммы мультфильмов',
xlab='Фильмы', ylab='Оценки', col=rainbow(11))
summary(df)
# 3. Выполнить сортировку наборов данных по выбранному признаку.
df_sorted <- df[order(df$Тачки, decreasing = T), ]; View(df_sorted)
# 4.	Сформировать отдельные наборы данных по одинаковому признаку
#(например, составить subdataset, из студентов, отдавших предпочтение по
# шкале > 7 определенной книге), вывести результат,  выполнить подсчет
# размерностей новых таблиц, снова выполнить их анализ –
#гистограмма, боксплот, серединные меры
cars_more_than_6 <- subset(df, Суперсемейка > 6); cars_more_than_6
dim(cars_more_than_6)
attach(cars_more_than_6)
hist(Суперсемейка, main="Гистограмма по столбцу Суперсемейка, оценки > 6", xlab="Оценки",
ylab="Частота", col = rainbow(4))
boxplot(Тачки, main='Коробчатая диаграмма фильма Суперсемейка',
xlab='Тачки', ylab='Оценки', col=rainbow(1))
mean(Суперсемейка)
median(Суперсемейка)
detach(cars_more_than_6)
# 1. Выполнить учебный импорт любых таблиц данных из csv-файла и xls-таблицы.
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
library(readxl)
test_data <- read_excel("test.xls", sheet = "test"); test_data
# 2. Выполнить дескриптивный анализ данных из ЛР №2.
num_idx <- which(sapply(df, is.numeric))
hist(df$Тачки, main="Гистограмма по столбцу Тачки", xlab="Оценки",
ylab="Частота", col = rainbow(6))
boxplot(df[, num_idx], main='Коробчатые диаграммы мультфильмов',
xlab='Фильмы', ylab='Оценки', col=rainbow(11))
summary(df)
# 3. Выполнить сортировку наборов данных по выбранному признаку.
df_sorted <- df[order(df$Тачки, decreasing = T), ]; View(df_sorted)
# 4.	Сформировать отдельные наборы данных по одинаковому признаку
#(например, составить subdataset, из студентов, отдавших предпочтение по
# шкале > 7 определенной книге), вывести результат,  выполнить подсчет
# размерностей новых таблиц, снова выполнить их анализ –
#гистограмма, боксплот, серединные меры
cars_more_than_6 <- subset(df, Суперсемейка > 6); cars_more_than_6
dim(cars_more_than_6)
attach(cars_more_than_6)
hist(Суперсемейка, main="Гистограмма по столбцу Суперсемейка, оценки > 6", xlab="Оценки",
ylab="Частота", col = rainbow(4))
boxplot(Тачки, main='Коробчатая диаграмма фильма Суперсемейка',
xlab='Тачки', ylab='Оценки', col=rainbow(1))
mean(Суперсемейка)
median(Суперсемейка)
detach(cars_more_than_6)
# 1. Выполнить учебный импорт любых таблиц данных из csv-файла и xls-таблицы.
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
library(readxl)
test_data <- read_excel("test.xls", sheet = "test"); test_data
# 2. Выполнить дескриптивный анализ данных из ЛР №2.
num_idx <- which(sapply(df, is.numeric))
hist(df$Тачки, main="Гистограмма по столбцу Тачки", xlab="Оценки",
ylab="Частота", col = rainbow(6))
boxplot(df[, num_idx], main='Коробчатые диаграммы мультфильмов',
xlab='Фильмы', ylab='Оценки', col=rainbow(11))
summary(df)
# 3. Выполнить сортировку наборов данных по выбранному признаку.
df_sorted <- df[order(df$Тачки, decreasing = T), ]; View(df_sorted)
# 4.	Сформировать отдельные наборы данных по одинаковому признаку
#(например, составить subdataset, из студентов, отдавших предпочтение по
# шкале > 7 определенной книге), вывести результат,  выполнить подсчет
# размерностей новых таблиц, снова выполнить их анализ –
#гистограмма, боксплот, серединные меры
cars_more_than_6 <- subset(df, Мадагаскар > 6); cars_more_than_6
dim(cars_more_than_6)
attach(cars_more_than_6)
hist(Мадагаскар, main="Гистограмма по столбцу Мадагаскар, оценки > 6", xlab="Оценки",
ylab="Частота", col = rainbow(4))
boxplot(Суперсемейка, main='Коробчатая диаграмма фильма Суперсемейка',
xlab='Тачки', ylab='Оценки', col=rainbow(1))
mean(Суперсемейка)
median(Суперсемейка)
detach(cars_more_than_6)
# 1. Выполнить учебный импорт любых таблиц данных из csv-файла и xls-таблицы.
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
library(readxl)
test_data <- read_excel("test.xls", sheet = "test"); test_data
# 2. Выполнить дескриптивный анализ данных из ЛР №2.
num_idx <- which(sapply(df, is.numeric))
hist(df$Тачки, main="Гистограмма по столбцу Тачки", xlab="Оценки",
ylab="Частота", col = rainbow(6))
boxplot(df[, num_idx], main='Коробчатые диаграммы мультфильмов',
xlab='Фильмы', ylab='Оценки', col=rainbow(11))
summary(df)
# 3. Выполнить сортировку наборов данных по выбранному признаку.
df_sorted <- df[order(df$Тачки, decreasing = T), ]; View(df_sorted)
# 4.	Сформировать отдельные наборы данных по одинаковому признаку
#(например, составить subdataset, из студентов, отдавших предпочтение по
# шкале > 7 определенной книге), вывести результат,  выполнить подсчет
# размерностей новых таблиц, снова выполнить их анализ –
#гистограмма, боксплот, серединные меры
cars_more_than_6 <- subset(df, Мадагаскар > 6); cars_more_than_6
dim(cars_more_than_6)
attach(cars_more_than_6)
hist(Мадагаскар, main="Гистограмма по столбцу Мадагаскар, оценки > 6", xlab="Оценки",
ylab="Частота", col = rainbow(4))
boxplot(Мадагаскар, main='Коробчатая диаграмма фильма Мадагаскар',
xlab='Мадагаскар', ylab='Оценки', col=rainbow(1))
mean(Суперсемейка)
median(Суперсемейка)
detach(cars_more_than_6)
num<-c(1:10)
square<-num*num
plot(num,square,type="b")
