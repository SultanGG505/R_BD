#   first_space
#   surnames[i] <- substr(df[i, 2], 1,
#                      first_space - 1)
# }
# диаграмма
pl_df <- data.frame(x=colnames(df[, num_idx]), y=means)
# пропуск строк с NA
pl_df <- pl_df[complete.cases(pl_df), ]
perf <-ggplot(pl_df, aes(x, y, fill = x)) +
geom_bar(stat="identity", show.legend = F)
perf
# genre_str <- paste("Оценки мультфильма", tolower(genre))
ggp <- perf + labs(x="Мультфильм",y="Оценка", title='Средняя оценка мультифильма')
ggp
# 1. Выполнить учебный импорт любых таблиц данных из csv-файла и xls-таблицы.
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
library(readxl)
test_data <- read_excel("test.xls", sheet = "test"); test_data
# 2. Выполнить дескриптивный анализ данных из ЛР №2.
num_idx <- which(sapply(df, is.numeric))
hist(df$Тачки, main="Гистограмма по столбцу Тачки", xlab="Оценки",
ylab="Частота", col = rainbow(6))
boxplot(df[, num_idx], main='Коробчатые диаграммы мультфильмов',
xlab='Фильмы', ylab='Оценки', col=rainbow(11))
summary(df)
# 3. Выполнить сортировку наборов данных по выбранному признаку.
df_sorted <- df[order(df$Рок, decreasing = T), ]; View(df_sorted)
# 1. Выполнить учебный импорт любых таблиц данных из csv-файла и xls-таблицы.
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
library(readxl)
test_data <- read_excel("test.xls", sheet = "test"); test_data
# 2. Выполнить дескриптивный анализ данных из ЛР №2.
num_idx <- which(sapply(df, is.numeric))
hist(df$Тачки, main="Гистограмма по столбцу Тачки", xlab="Оценки",
ylab="Частота", col = rainbow(6))
boxplot(df[, num_idx], main='Коробчатые диаграммы мультфильмов',
xlab='Фильмы', ylab='Оценки', col=rainbow(11))
summary(df)
# 3. Выполнить сортировку наборов данных по выбранному признаку.
df_sorted <- df[order(df$Тачки, decreasing = T), ]; View(df_sorted)
# 4.	Сформировать отдельные наборы данных по одинаковому признаку
#(например, составить subdataset, из студентов, отдавших предпочтение по
# шкале > 7 определенной книге), вывести результат,  выполнить подсчет
# размерностей новых таблиц, снова выполнить их анализ –
#гистограмма, боксплот, серединные меры
cars_more_than_6 <- subset(df, Тачки > 6); cars_more_than_6
dim(cars_more_than_6)
attach(cars_more_than_6)
hist(Тачки, main="Гистограмма по столбцу Тачки, оценки > 6", xlab="Оценки",
ylab="Частота", col = rainbow(4))
boxplot(Синтвейв, main='Коробчатая диаграмма фильма Тачки',
xlab='Тачки', ylab='Оценки', col=rainbow(1))
# 1. Выполнить учебный импорт любых таблиц данных из csv-файла и xls-таблицы.
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
library(readxl)
test_data <- read_excel("test.xls", sheet = "test"); test_data
# 2. Выполнить дескриптивный анализ данных из ЛР №2.
num_idx <- which(sapply(df, is.numeric))
hist(df$Тачки, main="Гистограмма по столбцу Тачки", xlab="Оценки",
ylab="Частота", col = rainbow(6))
boxplot(df[, num_idx], main='Коробчатые диаграммы мультфильмов',
xlab='Фильмы', ylab='Оценки', col=rainbow(11))
summary(df)
# 3. Выполнить сортировку наборов данных по выбранному признаку.
df_sorted <- df[order(df$Тачки, decreasing = T), ]; View(df_sorted)
# 4.	Сформировать отдельные наборы данных по одинаковому признаку
#(например, составить subdataset, из студентов, отдавших предпочтение по
# шкале > 7 определенной книге), вывести результат,  выполнить подсчет
# размерностей новых таблиц, снова выполнить их анализ –
#гистограмма, боксплот, серединные меры
cars_more_than_6 <- subset(df, Тачки > 6); cars_more_than_6
dim(cars_more_than_6)
attach(cars_more_than_6)
hist(Тачки, main="Гистограмма по столбцу Тачки, оценки > 6", xlab="Оценки",
ylab="Частота", col = rainbow(4))
boxplot(Тачки, main='Коробчатая диаграмма фильма Тачки',
xlab='Тачки', ylab='Оценки', col=rainbow(1))
mean(Тачки)
median(Тачки)
detach(cars_more_than_6)
# 1. Выполнить учебный импорт любых таблиц данных из csv-файла и xls-таблицы.
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
library(readxl)
test_data <- read_excel("test.xls", sheet = "test"); test_data
# 2. Выполнить дескриптивный анализ данных из ЛР №2.
num_idx <- which(sapply(df, is.numeric))
hist(df$Тачки, main="Гистограмма по столбцу Тачки", xlab="Оценки",
ylab="Частота", col = rainbow(6))
boxplot(df[, num_idx], main='Коробчатые диаграммы мультфильмов',
xlab='Фильмы', ylab='Оценки', col=rainbow(11))
summary(df)
# 3. Выполнить сортировку наборов данных по выбранному признаку.
df_sorted <- df[order(df$Тачки, decreasing = T), ]; View(df_sorted)
# 4.	Сформировать отдельные наборы данных по одинаковому признаку
#(например, составить subdataset, из студентов, отдавших предпочтение по
# шкале > 7 определенной книге), вывести результат,  выполнить подсчет
# размерностей новых таблиц, снова выполнить их анализ –
#гистограмма, боксплот, серединные меры
cars_more_than_6 <- subset(df, Тачки > 6); cars_more_than_6
dim(cars_more_than_6)
attach(cars_more_than_6)
hist(Тачки, main="Гистограмма по столбцу Тачки, оценки > 6", xlab="Оценки",
ylab="Частота", col = rainbow(4))
boxplot(Тачки, main='Коробчатая диаграмма фильма Тачки',
xlab='Тачки', ylab='Оценки', col=rainbow(1))
mean(Тачки)
median(Тачки)
detach(cars_more_than_6)
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
View(df)
View(df)
# 1. Выполнить учебный импорт любых таблиц данных из csv-файла и xls-таблицы.
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
library(readxl)
test_data <- read_excel("test.xls", sheet = "test"); test_data
# 2. Выполнить дескриптивный анализ данных из ЛР №2.
num_idx <- which(sapply(df, is.numeric))
hist(df$Тачки, main="Гистограмма по столбцу Тачки", xlab="Оценки",
ylab="Частота", col = rainbow(6))
boxplot(df[, num_idx], main='Коробчатые диаграммы мультфильмов',
xlab='Фильмы', ylab='Оценки', col=rainbow(11))
summary(df)
# 3. Выполнить сортировку наборов данных по выбранному признаку.
df_sorted <- df[order(df$Тачки, decreasing = T), ]; View(df_sorted)
# 4.	Сформировать отдельные наборы данных по одинаковому признаку
#(например, составить subdataset, из студентов, отдавших предпочтение по
# шкале > 7 определенной книге), вывести результат,  выполнить подсчет
# размерностей новых таблиц, снова выполнить их анализ –
#гистограмма, боксплот, серединные меры
cars_more_than_6 <- subset(df, Тачки > 6); cars_more_than_6
dim(cars_more_than_6)
attach(cars_more_than_6)
hist(Тачки, main="Гистограмма по столбцу Тачки, оценки > 6", xlab="Оценки",
ylab="Частота", col = rainbow(4))
boxplot(Тачки, main='Коробчатая диаграмма фильма Тачки',
xlab='Тачки', ylab='Оценки', col=rainbow(1))
mean(Тачки)
median(Тачки)
detach(cars_more_than_6)
cars_more_than_6
cars_more_than_6 <- subset(df, Суперсемейка > 6); cars_more_than_6
# 1. Выполнить учебный импорт любых таблиц данных из csv-файла и xls-таблицы.
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
library(readxl)
test_data <- read_excel("test.xls", sheet = "test"); test_data
# 2. Выполнить дескриптивный анализ данных из ЛР №2.
num_idx <- which(sapply(df, is.numeric))
hist(df$Тачки, main="Гистограмма по столбцу Тачки", xlab="Оценки",
ylab="Частота", col = rainbow(6))
boxplot(df[, num_idx], main='Коробчатые диаграммы мультфильмов',
xlab='Фильмы', ylab='Оценки', col=rainbow(11))
summary(df)
# 3. Выполнить сортировку наборов данных по выбранному признаку.
df_sorted <- df[order(df$Тачки, decreasing = T), ]; View(df_sorted)
# 4.	Сформировать отдельные наборы данных по одинаковому признаку
#(например, составить subdataset, из студентов, отдавших предпочтение по
# шкале > 7 определенной книге), вывести результат,  выполнить подсчет
# размерностей новых таблиц, снова выполнить их анализ –
#гистограмма, боксплот, серединные меры
cars_more_than_6 <- subset(df, Суперсемейка > 6); cars_more_than_6
dim(cars_more_than_6)
attach(cars_more_than_6)
hist(Тачки, main="Гистограмма по столбцу Тачки, оценки > 6", xlab="Оценки",
ylab="Частота", col = rainbow(4))
boxplot(Тачки, main='Коробчатая диаграмма фильма Тачки',
xlab='Тачки', ylab='Оценки', col=rainbow(1))
mean(Тачки)
median(Тачки)
detach(cars_more_than_6)
# 1. Выполнить учебный импорт любых таблиц данных из csv-файла и xls-таблицы.
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
library(readxl)
test_data <- read_excel("test.xls", sheet = "test"); test_data
# 2. Выполнить дескриптивный анализ данных из ЛР №2.
num_idx <- which(sapply(df, is.numeric))
hist(df$Тачки, main="Гистограмма по столбцу Тачки", xlab="Оценки",
ylab="Частота", col = rainbow(6))
boxplot(df[, num_idx], main='Коробчатые диаграммы мультфильмов',
xlab='Фильмы', ylab='Оценки', col=rainbow(11))
summary(df)
# 3. Выполнить сортировку наборов данных по выбранному признаку.
df_sorted <- df[order(df$Тачки, decreasing = T), ]; View(df_sorted)
# 4.	Сформировать отдельные наборы данных по одинаковому признаку
#(например, составить subdataset, из студентов, отдавших предпочтение по
# шкале > 7 определенной книге), вывести результат,  выполнить подсчет
# размерностей новых таблиц, снова выполнить их анализ –
#гистограмма, боксплот, серединные меры
cars_more_than_6 <- subset(df, Суперсемейка > 6); cars_more_than_6
dim(cars_more_than_6)
attach(cars_more_than_6)
hist(Тачки, main="Гистограмма по столбцу Тачки, оценки > 6", xlab="Оценки",
ylab="Частота", col = rainbow(4))
boxplot(Тачки, main='Коробчатая диаграмма фильма Тачки',
xlab='Тачки', ylab='Оценки', col=rainbow(1))
mean(Тачки)
median(Тачки)
detach(cars_more_than_6)
# 1. Выполнить учебный импорт любых таблиц данных из csv-файла и xls-таблицы.
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
library(readxl)
test_data <- read_excel("test.xls", sheet = "test"); test_data
# 2. Выполнить дескриптивный анализ данных из ЛР №2.
num_idx <- which(sapply(df, is.numeric))
hist(df$Суперсемейка, main="Гистограмма по столбцу Суперсемейка", xlab="Оценки",
ylab="Частота", col = rainbow(6))
boxplot(df[, num_idx], main='Коробчатые диаграммы мультфильмов',
xlab='Фильмы', ylab='Оценки', col=rainbow(11))
summary(df)
# 3. Выполнить сортировку наборов данных по выбранному признаку.
df_sorted <- df[order(df$Суперсемейка, decreasing = T), ]; View(df_sorted)
# 4.	Сформировать отдельные наборы данных по одинаковому признаку
#(например, составить subdataset, из студентов, отдавших предпочтение по
# шкале > 7 определенной книге), вывести результат,  выполнить подсчет
# размерностей новых таблиц, снова выполнить их анализ –
#гистограмма, боксплот, серединные меры
cars_more_than_6 <- subset(df, Суперсемейка > 6); cars_more_than_6
dim(cars_more_than_6)
attach(cars_more_than_6)
hist(Суперсемейка, main="Гистограмма по столбцу Суперсемейка, оценки > 6", xlab="Оценки",
ylab="Частота", col = rainbow(4))
boxplot(Суперсемейка, main='Коробчатая диаграмма фильма Суперсемейка',
xlab='Тачки', ylab='Оценки', col=rainbow(1))
mean(Суперсемейка)
median(Суперсемейка)
detach(cars_more_than_6)
# 1. Выполнить учебный импорт любых таблиц данных из csv-файла и xls-таблицы.
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
library(readxl)
test_data <- read_excel("test.xls", sheet = "test"); test_data
# 2. Выполнить дескриптивный анализ данных из ЛР №2.
num_idx <- which(sapply(df, is.numeric))
hist(df$Тачки, main="Гистограмма по столбцу Тачки", xlab="Оценки",
ylab="Частота", col = rainbow(6))
boxplot(df[, num_idx], main='Коробчатые диаграммы мультфильмов',
xlab='Фильмы', ylab='Оценки', col=rainbow(11))
summary(df)
# 3. Выполнить сортировку наборов данных по выбранному признаку.
df_sorted <- df[order(df$Тачки, decreasing = T), ]; View(df_sorted)
# 4.	Сформировать отдельные наборы данных по одинаковому признаку
#(например, составить subdataset, из студентов, отдавших предпочтение по
# шкале > 7 определенной книге), вывести результат,  выполнить подсчет
# размерностей новых таблиц, снова выполнить их анализ –
#гистограмма, боксплот, серединные меры
cars_more_than_6 <- subset(df, Суперсемейка > 6); cars_more_than_6
dim(cars_more_than_6)
attach(cars_more_than_6)
hist(Суперсемейка, main="Гистограмма по столбцу Суперсемейка, оценки > 6", xlab="Оценки",
ylab="Частота", col = rainbow(4))
boxplot(Тачки, main='Коробчатая диаграмма фильма Суперсемейка',
xlab='Тачки', ylab='Оценки', col=rainbow(1))
mean(Суперсемейка)
median(Суперсемейка)
detach(cars_more_than_6)
# 1. Выполнить учебный импорт любых таблиц данных из csv-файла и xls-таблицы.
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
library(readxl)
test_data <- read_excel("test.xls", sheet = "test"); test_data
# 2. Выполнить дескриптивный анализ данных из ЛР №2.
num_idx <- which(sapply(df, is.numeric))
hist(df$Тачки, main="Гистограмма по столбцу Тачки", xlab="Оценки",
ylab="Частота", col = rainbow(6))
boxplot(df[, num_idx], main='Коробчатые диаграммы мультфильмов',
xlab='Фильмы', ylab='Оценки', col=rainbow(11))
summary(df)
# 3. Выполнить сортировку наборов данных по выбранному признаку.
df_sorted <- df[order(df$Тачки, decreasing = T), ]; View(df_sorted)
# 4.	Сформировать отдельные наборы данных по одинаковому признаку
#(например, составить subdataset, из студентов, отдавших предпочтение по
# шкале > 7 определенной книге), вывести результат,  выполнить подсчет
# размерностей новых таблиц, снова выполнить их анализ –
#гистограмма, боксплот, серединные меры
cars_more_than_6 <- subset(df, Суперсемейка > 6); cars_more_than_6
dim(cars_more_than_6)
attach(cars_more_than_6)
hist(Суперсемейка, main="Гистограмма по столбцу Суперсемейка, оценки > 6", xlab="Оценки",
ylab="Частота", col = rainbow(4))
boxplot(Тачки, main='Коробчатая диаграмма фильма Суперсемейка',
xlab='Тачки', ylab='Оценки', col=rainbow(1))
mean(Суперсемейка)
median(Суперсемейка)
detach(cars_more_than_6)
# 1. Выполнить учебный импорт любых таблиц данных из csv-файла и xls-таблицы.
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
library(readxl)
test_data <- read_excel("test.xls", sheet = "test"); test_data
# 2. Выполнить дескриптивный анализ данных из ЛР №2.
num_idx <- which(sapply(df, is.numeric))
hist(df$Тачки, main="Гистограмма по столбцу Тачки", xlab="Оценки",
ylab="Частота", col = rainbow(6))
boxplot(df[, num_idx], main='Коробчатые диаграммы мультфильмов',
xlab='Фильмы', ylab='Оценки', col=rainbow(11))
summary(df)
# 3. Выполнить сортировку наборов данных по выбранному признаку.
df_sorted <- df[order(df$Тачки, decreasing = T), ]; View(df_sorted)
# 4.	Сформировать отдельные наборы данных по одинаковому признаку
#(например, составить subdataset, из студентов, отдавших предпочтение по
# шкале > 7 определенной книге), вывести результат,  выполнить подсчет
# размерностей новых таблиц, снова выполнить их анализ –
#гистограмма, боксплот, серединные меры
cars_more_than_6 <- subset(df, Мадагаскар > 6); cars_more_than_6
dim(cars_more_than_6)
attach(cars_more_than_6)
hist(Мадагаскар, main="Гистограмма по столбцу Мадагаскар, оценки > 6", xlab="Оценки",
ylab="Частота", col = rainbow(4))
boxplot(Суперсемейка, main='Коробчатая диаграмма фильма Суперсемейка',
xlab='Тачки', ylab='Оценки', col=rainbow(1))
mean(Суперсемейка)
median(Суперсемейка)
detach(cars_more_than_6)
# 1. Выполнить учебный импорт любых таблиц данных из csv-файла и xls-таблицы.
df <- read.csv("Лучший мультфильм.csv", sep=";", header=T,
fileEncoding="cp1251")
df[15, ] <- df[16, ]
df <- df[-c(16), ]
library(readxl)
test_data <- read_excel("test.xls", sheet = "test"); test_data
# 2. Выполнить дескриптивный анализ данных из ЛР №2.
num_idx <- which(sapply(df, is.numeric))
hist(df$Тачки, main="Гистограмма по столбцу Тачки", xlab="Оценки",
ylab="Частота", col = rainbow(6))
boxplot(df[, num_idx], main='Коробчатые диаграммы мультфильмов',
xlab='Фильмы', ylab='Оценки', col=rainbow(11))
summary(df)
# 3. Выполнить сортировку наборов данных по выбранному признаку.
df_sorted <- df[order(df$Тачки, decreasing = T), ]; View(df_sorted)
# 4.	Сформировать отдельные наборы данных по одинаковому признаку
#(например, составить subdataset, из студентов, отдавших предпочтение по
# шкале > 7 определенной книге), вывести результат,  выполнить подсчет
# размерностей новых таблиц, снова выполнить их анализ –
#гистограмма, боксплот, серединные меры
cars_more_than_6 <- subset(df, Мадагаскар > 6); cars_more_than_6
dim(cars_more_than_6)
attach(cars_more_than_6)
hist(Мадагаскар, main="Гистограмма по столбцу Мадагаскар, оценки > 6", xlab="Оценки",
ylab="Частота", col = rainbow(4))
boxplot(Мадагаскар, main='Коробчатая диаграмма фильма Мадагаскар',
xlab='Мадагаскар', ylab='Оценки', col=rainbow(1))
mean(Суперсемейка)
median(Суперсемейка)
detach(cars_more_than_6)
num<-c(1:10)
square<-num*num
plot(num,square,type="b")
# Румыния - Гребля академическая
setwd("C:\Users\sulta\OneDrive\Документы\GitHub\R_BD")
# Германия - Спортивная гимнастика
# setwd("C:\Users\sulta\OneDrive\Документы\GitHub\R_BD")
library(readxl)
df_m <- read_excel("LR4_sp_m.xlsx")
df_f <- read_excel("LR4_sp_f.xlsx")
# количество призовых мест
all_pl_m <- sapply(df_m[df_m$Year >= 1992, -1], sum)
all_pl_f <- sapply(df_f[df_m$Year >= 1993, -1], sum)
par(mfrow=c(1,2))
barplot(all_pl_m, names=c(1:8), col="blue", xlab="Место",
ylab="Количество мест (1-8)", ylim=c(0,10), main="Мужчины (за последние 30 лет)")
barplot(all_pl_f, names=c(1:8), col="hotpink", xlab="Место",
ylab="Количество мест (1-8)", ylim = c(0, 10), main="Женщины (за последние 30 лет)")
# первые места
first_pl_m <- df_m[df_m$Gold > 0 & df_m$Year >= 1992, c(1:2)]
first_pl_f <- df_f[df_f$Gold > 0 & df_f$Year >= 1993, c(1:2)]
pie(first_pl_m$Gold, labels=first_pl_m$Gold,
col=topo.colors(length(first_pl_m$Year)),
main = "Количество золотых медалей (мужчины)\nза все время")
legend(-1.3, 1.1, first_pl_m$Year, cex=0.7,
fill = topo.colors(length(first_pl_m$Year)))
pie(first_pl_f$Gold, labels=first_pl_f$Gold,
col=topo.colors(length(first_pl_f$Year)),
main = "Количество золотых медалей (женщины)\nза все время")
# Германия - Спортивная гимнастика
# setwd("C:\Users\sulta\OneDrive\Документы\GitHub\R_BD")
library(readxl)
df_m <- read_excel("LR4_sp_m.xlsx")
df_f <- read_excel("LR4_sp_f.xlsx")
# количество призовых мест
all_pl_m <- sapply(df_m[df_m$Year >= 1992, -1], sum)
all_pl_f <- sapply(df_f[df_m$Year >= 1993, -1], sum)
par(mfrow=c(1,2))
barplot(all_pl_m, names=c(1:8), col="blue", xlab="Место",
ylab="Количество мест (1-8)", ylim=c(0,10), main="Мужчины (за последние 30 лет)")
barplot(all_pl_f, names=c(1:8), col="hotpink", xlab="Место",
ylab="Количество мест (1-8)", ylim = c(0, 10), main="Женщины (за последние 30 лет)")
# первые места
first_pl_m <- df_m[df_m$Gold > 0 & df_m$Year >= 1992, c(1:2)]
first_pl_f <- df_f[df_f$Gold > 0 & df_f$Year >= 1993, c(1:2)]
pie(first_pl_m$Gold, labels=first_pl_m$Gold,
col=topo.colors(length(first_pl_m$Year)),
main = "Количество золотых медалей (мужчины)\nза все время")
legend(-1.3, 1.1, first_pl_m$Year, cex=0.7,
fill = topo.colors(length(first_pl_m$Year)))
pie(first_pl_f$Gold, labels=first_pl_f$Gold,
col=topo.colors(length(first_pl_f$Year)),
main = "Количество золотых медалей (женщины)\nза все время")
# Германия - Спортивная гимнастика
# setwd("C:\Users\sulta\OneDrive\Документы\GitHub\R_BD")
library(readxl)
df_m <- read_excel("LR4_sp_m.xlsx")
df_f <- read_excel("LR4_sp_f.xlsx")
# количество призовых мест
all_pl_m <- sapply(df_m[df_m$Year >= 1992, -1], sum)
all_pl_f <- sapply(df_f[df_m$Year >= 1992, -1], sum)
par(mfrow=c(1,2))
barplot(all_pl_m, names=c(1:8), col="blue", xlab="Место",
ylab="Количество мест (1-8)", ylim=c(0,10), main="Мужчины (за последние 30 лет)")
barplot(all_pl_f, names=c(1:8), col="hotpink", xlab="Место",
ylab="Количество мест (1-8)", ylim = c(0, 10), main="Женщины (за последние 30 лет)")
# первые места
first_pl_m <- df_m[df_m$Gold > 0 & df_m$Year >= 1992, c(1:2)]
first_pl_f <- df_f[df_f$Gold > 0 & df_f$Year >= 1992, c(1:2)]
pie(first_pl_m$Gold, labels=first_pl_m$Gold,
col=topo.colors(length(first_pl_m$Year)),
main = "Количество золотых медалей (мужчины)\nза все время")
legend(-1.3, 1.1, first_pl_m$Year, cex=0.7,
fill = topo.colors(length(first_pl_m$Year)))
#pie(first_pl_f$Gold, labels=first_pl_f$Gold,
#   col=topo.colors(length(first_pl_f$Year)),
#  main = "Количество золотых медалей (женщины)\nза все время")
#legend(-1.6, 1.5, first_pl_f$Year, cex=0.7,
#     fill = topo.colors(length(first_pl_f$Year)))
# призовые места
prize_pl_m <- data.frame(Год=df_m[df_m$Year >= 1992, 1],
Призовые=rowSums(df_m[df_m$Year >= 1992, 2:4]))
prize_pl_f <- data.frame(Год=df_f[df_f$Year >= 1992, 1],
Призовые=rowSums(df_f[df_f$Year >= 1992, 2:4]))
par(mfrow=c(1,1))
plot(prize_pl_m, type="b", pch=21, col="blue", xaxt="n", ylim=c(0,7), xlab="Год",
main="Призовые места Германии по спортивной гимнастике за последние 30 лет")
lines(prize_pl_f, type="o", pch=21, col="hotpink")
legend('topright', c("Мужчины", "Женщины"), fill=c("blue", "hotpink"))
axis(side=1, at=prize_pl_m$Year)
last6_gold <- read_excel("LR4_gold.xlsx")
pl_col <- c('red', 'green', 'gold', '#BA43B4', 'gray', 'black', 'blue')
plot(last6_gold$Год, last6_gold$Россия, type="b",
pch=18, col=pl_col[1], xaxt="n", ylim=c(0, 40),
xlab="Год проведения олимпиады", ylab="Количество золотых медалей",
main="Динамика количества победителей за 6 последних олимпиад")
lines(last6_gold$Год, last6_gold$Китай, type="o", pch=18, col=pl_col[2])
lines(last6_gold$Год, last6_gold$Италия, type="o", pch=18, col=pl_col[3])
lines(last6_gold$Год, last6_gold$Япония, type="o", pch=18, col=pl_col[4])
lines(last6_gold$Год, last6_gold$Нидерланды, type="o", pch=18, col=pl_col[5])
lines(last6_gold$Год, last6_gold$Испания, type="o", pch=18, col=pl_col[6])
lines(last6_gold$Год, last6_gold$Беларусь, type="o", pch=18, col=pl_col[7])
axis(side=1, at=last6_gold$Год)
legend('topright', cex = 0.5, colnames(last6_gold)[-1], fill=pl_col)
last6_prize <- read_excel("LR4_prize.xlsx")
plot(last6_prize$Год, last6_prize$Россия, type="b",
pch=18, col=pl_col[1], xaxt="n", ylim=c(0, 100),
xlab="Год проведения олимпиады", ylab="Количество призовых мест",
main="Динамика количества призовых мест за 6 последних олимпиад")
lines(last6_prize$Год, last6_prize$Китай, type="o", pch=18, col=pl_col[2])
lines(last6_prize$Год, last6_prize$Италия, type="o", pch=18, col=pl_col[3])
lines(last6_prize$Год, last6_prize$Япония, type="o", pch=18, col=pl_col[4])
lines(last6_prize$Год, last6_prize$Нидерланды, type="o", pch=18, col=pl_col[5])
lines(last6_prize$Год, last6_prize$Испания, type="o", pch=18, col=pl_col[6])
lines(last6_prize$Год, last6_prize$Беларусь, type="o", pch=18, col=pl_col[7])
axis(side=1, at=last6_prize$Год)
legend('topright', cex = 0.45,
colnames(last6_prize)[-1], fill=pl_col)
last6_m <- tail(prize_pl_m, 6)
last6_f <- tail(prize_pl_f, 6)
par(mfrow=c(1,3))
plot(last6_m, type="b", pch=18, col="blue", xaxt="n", ylim=c(0,3),
xlab="Год проведения олимпиады", ylab="Количество призовых мест",
main="Динамика изменения кол-ва призовых мест Германии\nпо спортивной гимнастике за последние 6 олимпиад")
lines(last6_f, type="o", pch=18, col="hotpink")
legend('topright', cex=0.7 ,c("Мужчины", "Женщины"), fill=c("blue", "hotpink"))
axis(side=1, at=last6_m$Year)
last6_mf = data.frame(Призовые_М=last6_m$Призовые, Призовые_Ж=last6_f$Призовые)
barplot(t(as.matrix(last6_mf)), beside=T,
xlab="Год проведения олимпиады",
ylab="Количество призовых мест", names=last6_f$Year, col=c("blue", "hotpink"),
main="Динамика изменения кол-ва призовых мест Германии\nпо спортивной гимнастике за последние 6 олимпиад")
last6_mf_sum <- sapply(last6_mf, sum)
pie(last6_mf_sum, labels=c(last6_mf_sum["Призовые_М"], last6_mf_sum["Призовые_Ж"]),
col=c("blue", "hotpink"), radius = 1.5,
main="Суммарное кол-во призовых мест у М и Ж из Германии\nпо спортивной гимнастике за последние 6 олимпиад")
legend(-1.6, 2.1, c('Мужчины', 'Женщины'), cex=0.7,
fill = c("blue", "hotpink"))
