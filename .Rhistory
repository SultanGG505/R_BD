qqPlot(judo_M$Weight, main='Вес мужчин дзюдоистов')
qqPlot(judo_F$Weight, main='Вес женщин дзюдоистов')
hist(judo_M$Weight, freq = FALSE, ylim = c(0, 0.025),
main = "Вес мужчин дзюдоистов")
lines(density(judo_M$Weight), col = "red", lwd = 2)
hist(judo_F$Weight, freq = FALSE, main = "Вес женщин дзюдоистов")
lines(density(judo_F$Weight), col = "red", lwd = 2)
shapiro.test(judo_M$Weight)
shapiro.test(judo_F$Weight)
qqPlot(taekwondo_M$Weight, main='Вес мужчин таэквондистов')
qqPlot(taekwondo_F$Weight, main='Вес женщин таэквондистов')
hist(taekwondo_M$Weight, freq = FALSE, main = "Вес мужчин таэквондистов")
lines(density(taekwondo_M$Weight), col = "red", lwd = 2)
hist(taekwondo_F$Weight, freq = FALSE, main = "Вес женщин таэквондистов")
lines(density(taekwondo_F$Weight), col = "red", lwd = 2)
shapiro.test(taekwondo_M$Weight)
shapiro.test(taekwondo_F$Weight)
judo_taekwondo_M <- rbind(judo_M, taekwondo_M)
judo_taekwondo_F <- rbind(judo_F, taekwondo_F)
bartlett.test(Weight ~ Sport, data=judo_taekwondo_M)
bartlett.test(Weight ~ Sport, data=judo_taekwondo_F)
t.test(Weight ~ Sport, data=judo_taekwondo_M)
t.test(Weight ~ Sport, data=judo_taekwondo_F)
df <- read.csv("athlete_events.csv", sep=",", header=T,
fileEncoding="UTF-8", )
View(df)
View(df)
df <- read.csv("athlete_events.csv", sep=",", header=T,
fileEncoding="UTF-8", )
# все гребцы
rowing <- df[df$Sport == '
Gymnastics' & !is.na(df$Weight), ]
h0 <- mean(df[!df$Sport == '
Gymnastics' & !is.na(df$Weight), ]$Weight)
t.test(rowing$Weight, mu=h0)
df <- read.csv("athlete_events.csv", sep=",", header=T,
fileEncoding="UTF-8", )
# все гребцы
rowing <- df[df$Sport == 'Rowing' & !is.na(df$Weight), ]
h0 <- mean(df[!df$Sport == 'Rowing' & !is.na(df$Weight), ]$Weight)
t.test(rowing$Weight, mu=h0)
df <- read.csv("athlete_events.csv", sep=",", header=T,
fileEncoding="UTF-8", )
# все гребцы
rowing <- df[df$Sport == 'Gymnastics' & !is.na(df$Weight), ]
h0 <- mean(df[!df$Sport == 'Gymnastics' & !is.na(df$Weight), ]$Weight)
t.test(rowing$Weight, mu=h0)
df <- read.csv("athlete_events.csv", sep=",", header=T,
fileEncoding="UTF-8", )
rowing <- df[df$Sport == 'Gymnastics' & !is.na(df$Weight), ]
h0 <- mean(df[!df$Sport == 'Gymnastics' & !is.na(df$Weight), ]$Weight)
t.test(rowing$Weight, mu=h0)
h0
Gymnastics <- df[df$Sport == 'Gymnastics' & !is.na(df$Weight), ]
h0 <- mean(df[!df$Sport == 'Gymnastics' & !is.na(df$Weight), ]$Weight)
h0
df <- read.csv("athlete_events.csv", sep=",", header=T,
fileEncoding="UTF-8", )
# все гребцы
Gymnastics <- df[df$Sport == 'Gymnastics' & !is.na(df$Weight), ]
h0 <- mean(df[!df$Sport == 'Gymnastics' & !is.na(df$Weight), ]$Weight)
h0
t.test(Gymnastics$Weight, mu=h0)
taekwondo_M <- df[df$Sport == 'Taekwondo' & !is.na(df$Weight) & df$Sex == 'M', ]
taekwondo_F <- df[df$Sport == 'Taekwondo' & !is.na(df$Weight) & df$Sex == 'F', ]
judo_M <- df[df$Sport == 'Judo' & !is.na(df$Weight) & df$Sex == 'M', ]
judo_F <- df[df$Sport == 'Judo' & !is.na(df$Weight) & df$Sex == 'F', ]
library(car)
par(mfrow=c(1, 2))
qqPlot(judo_M$Weight, main='Вес мужчин дзюдоистов')
qqPlot(judo_F$Weight, main='Вес женщин дзюдоистов')
hist(judo_M$Weight, freq = FALSE, ylim = c(0, 0.025),
main = "Вес мужчин дзюдоистов")
lines(density(judo_M$Weight), col = "red", lwd = 2)
hist(judo_F$Weight, freq = FALSE, main = "Вес женщин дзюдоистов")
lines(density(judo_F$Weight), col = "red", lwd = 2)
shapiro.test(judo_M$Weight)
shapiro.test(judo_F$Weight)
qqPlot(taekwondo_M$Weight, main='Вес мужчин таэквондистов')
qqPlot(taekwondo_F$Weight, main='Вес женщин таэквондистов')
hist(taekwondo_M$Weight, freq = FALSE, main = "Вес мужчин таэквондистов")
lines(density(taekwondo_M$Weight), col = "red", lwd = 2)
hist(taekwondo_F$Weight, freq = FALSE, main = "Вес женщин таэквондистов")
lines(density(taekwondo_F$Weight), col = "red", lwd = 2)
shapiro.test(taekwondo_M$Weight)
shapiro.test(taekwondo_F$Weight)
judo_taekwondo_M <- rbind(judo_M, taekwondo_M)
judo_taekwondo_F <- rbind(judo_F, taekwondo_F)
bartlett.test(Weight ~ Sport, data=judo_taekwondo_M)
bartlett.test(Weight ~ Sport, data=judo_taekwondo_F)
t.test(Weight ~ Sport, data=judo_taekwondo_M)
t.test(Weight ~ Sport, data=judo_taekwondo_F)
# longley
paste0('Количество переменных = ', length(longley))
paste0('Объем выборки = ', nrow(longley))
summary(longley)
cor(longley)
plot(longley$Employed, longley$Unemployed, type='l')
plot(longley$Year, longley$Employed, type='l')
plot(longley$Year, longley$Unemployed, type='l')
plot(longley$Year, longley$Armed.Forces, type='l')
plot(longley$Year, longley$GNP, type='l')
plot(longley$Unemployed, longley$Armed.Forces)
library(car)
par(mfrow=c(2, 2))
qqPlot(longley$GNP)
qqPlot(longley$Employed)
qqPlot(longley$Unemployed)
qqPlot(longley$Armed.Forces)
shapiro.test(longley$GNP)
shapiro.test(longley$Employed)
shapiro.test(longley$Unemployed)
shapiro.test(longley$Armed.Forces)
par(mfrow=c(1, 1))
cor(longley$GNP, log(longley$GNP),method="spearman")
plot(longley$GNP, log(longley$GNP), type='l')
df <- read.csv("a.csv", sep=",", header=T,
fileEncoding="UTF-8")
df <- df[, -c(1:3)]; df <- t(df)
colnames(df) <- df[1, ]; df <- df[-1, -c(23:27)]
df[df == '..'] <- NA; df <- as.data.frame(df)
df <- data.frame(lapply(df, as.numeric)); rownames(df) <- 1989:2017
View(df)
View(df)
# longley
paste0('Количество переменных = ', length(longley))
paste0('Объем выборки = ', nrow(longley))
summary(longley)
cor(longley)
plot(longley$Employed, longley$Unemployed, type='l')
plot(longley$Year, longley$Employed, type='l')
plot(longley$Year, longley$Unemployed, type='l')
plot(longley$Year, longley$Armed.Forces, type='l')
plot(longley$Year, longley$GNP, type='l')
plot(longley$Unemployed, longley$Armed.Forces)
library(car)
par(mfrow=c(2, 2))
qqPlot(longley$GNP)
# longley
paste0('Количество переменных = ', length(longley))
paste0('Объем выборки = ', nrow(longley))
summary(longley)
cor(longley)
plot(longley$Employed, longley$Unemployed, type='l')
plot(longley$Year, longley$Employed, type='l')
plot(longley$Year, longley$Unemployed, type='l')
plot(longley$Year, longley$Armed.Forces, type='l')
plot(longley$Year, longley$GNP, type='l')
plot(longley$Unemployed, longley$Armed.Forces)
library(car)
par(mfrow=c(2, 2))
qqPlot(longley$GNP)
# longley
paste0('Количество переменных = ', length(longley))
paste0('Объем выборки = ', nrow(longley))
summary(longley)
cor(longley)
plot(longley$Employed, longley$Unemployed, type='l')
plot(longley$Year, longley$Employed, type='l')
plot(longley$Year, longley$Unemployed, type='l')
plot(longley$Year, longley$Armed.Forces, type='l')
plot(longley$Year, longley$GNP, type='l')
plot(longley$Unemployed, longley$Armed.Forces)
library(car)
par(mfrow=c(2, 2))
qqPlot(longley$GNP)
# longley
paste0('Количество переменных = ', length(longley))
paste0('Объем выборки = ', nrow(longley))
summary(longley)
cor(longley)
plot(longley$Employed, longley$Unemployed, type='l')
paste0('Количество переменных = ', length(longley))
paste0('Объем выборки = ', nrow(longley))
summary(longley)
cor(longley)
plot(longley$Employed, longley$Unemployed, type='l')
plot(longley$Year, longley$Employed, type='l')
plot(longley$Year, longley$Unemployed, type='l')
plot(longley$Year, longley$Armed.Forces, type='l')
plot(longley$Year, longley$GNP, type='l')
plot(longley$Unemployed, longley$Armed.Forces)
library(car)
par(mfrow=c(2, 2))
qqPlot(longley$GNP)
df <- read.csv("Izrael.csv", sep=",", header=T,
fileEncoding="UTF-8")
View(df)
paste0('Количество переменных = ', length(longley))
paste0('Объем выборки = ', nrow(longley))
summary(longley)
cor(longley)
plot(longley$Employed, longley$Unemployed, type='l')
plot(longley$Year, longley$Employed, type='l')
plot(longley$Year, longley$Unemployed, type='l')
plot(longley$Year, longley$Armed.Forces, type='l')
plot(longley$Year, longley$GNP, type='l')
plot(longley$Unemployed, longley$Armed.Forces)
library(car)
par(mfrow=c(2, 2))
qqPlot(longley$GNP)
df <- read.csv("Izrael.csv", sep=",", header=T,
fileEncoding="UTF-8")
paste0('Количество переменных = ', length(longley))
paste0('Объем выборки = ', nrow(longley))
summary(longley)
df <- read.csv("Izrael.csv", sep=",", header=T,
fileEncoding="UTF-8")
df <- df[, -c(1:3)]; df <- t(df)
colnames(df) <- df[1, ]; df <- df[-1, -c(23:27)]
df[df == '..'] <- NA; df <- as.data.frame(df)
df <- data.frame(lapply(df, as.numeric)); rownames(df) <- 1989:2017
library(car)
scatterplotMatrix(df[, c(1:4)], spread=FALSE, lty.smooth=2,
main="Матрица диаграмм рассеяния")
df <- read.csv("Izrael.csv", sep=",", header=T,
fileEncoding="UTF-8")
df <- df[, -c(1:3)]; df <- t(df)
colnames(df) <- df[1, ]; df <- df[-1, -c(23:27)]
df[df == '..'] <- NA; df <- as.data.frame(df)
df <- data.frame(lapply(df, as.numeric)); rownames(df) <- 1989:2017
library(car)
scatterplotMatrix(df[, c(1:4)], spread=FALSE, lty.smooth=2,
main="Матрица диаграмм рассеяния")
paste0('Количество переменных = ', length(longley))
paste0('Объем выборки = ', nrow(longley))
summary(longley)
cor(longley)
plot(longley$Employed, longley$Unemployed, type='l')
plot(longley$Year, longley$Employed, type='l')
plot(longley$Year, longley$Unemployed, type='l')
plot(longley$Year, longley$Armed.Forces, type='l')
plot(longley$Year, longley$GNP, type='l')
plot(longley$Unemployed, longley$Armed.Forces)
library(car)
par(mfrow=c(2, 2))
qqPlot(longley$GNP)
qqPlot(longley$Employed)
qqPlot(longley$Unemployed)
qqPlot(longley$Armed.Forces)
shapiro.test(longley$GNP)
shapiro.test(longley$Employed)
shapiro.test(longley$Unemployed)
shapiro.test(longley$Armed.Forces)
par(mfrow=c(1, 1))
cor(longley$GNP, log(longley$GNP),method="spearman")
plot(longley$GNP, log(longley$GNP), type='l')
df <- read.csv("Izrael.csv", sep=",", header=T,
fileEncoding="UTF-8")
df <- df[, -c(1:3)]; df <- t(df)
colnames(df) <- df[1, ]; df <- df[-1, -c(23:27)]
df[df == '..'] <- NA; df <- as.data.frame(df)
df <- data.frame(lapply(df, as.numeric)); rownames(df) <- 1989:2017
library(car)
scatterplotMatrix(df[, c(1:4)], spread=FALSE, lty.smooth=2,
main="Матрица диаграмм рассеяния")
df <- read.csv("Izrael.csv", sep=",", header=T,
fileEncoding="UTF-8")
df <- df[, -c(1:3)]; df <- t(df)
colnames(df) <- df[1, ]; df <- df[-1, -c(23:27)]
df[df == '..'] <- NA; df <- as.data.frame(df)
df <- data.frame(lapply(df, as.numeric)); rownames(df) <- 1989:2018
df <- read.csv("Izrael.csv", sep=",", header=T,
fileEncoding="UTF-8")
df <- df[, -c(1:3)]; df <- t(df)
colnames(df) <- df[1, ]; df <- df[-1, -c(23:27)]
df[df == '..'] <- NA; df <- as.data.frame(df)
df <- data.frame(lapply(df, as.numeric)); rownames(df) <- 1989:2017
library(car)
scatterplotMatrix(df[, c(1:4)], spread=FALSE, lty.smooth=2,
main="Матрица диаграмм рассеяния")
library(car)
scatterplotMatrix(df[, c(1:3)], spread=FALSE, lty.smooth=2,
main="Матрица диаграмм рассеяния")
library(car)
scatterplotMatrix(df[, c(1:2)], spread=FALSE, lty.smooth=2,
main="Матрица диаграмм рассеяния")
scatterplotMatrix(df[, c(1:2)], spread=FALSE, lty.smooth=2,
main="Матрица диаграмм рассеяния")
library(car)
scatterplotMatrix(df[, c(1:2)], spread=FALSE, lty.smooth=2,
main="Матрица диаграмм рассеяния")
library(car)
scatterplotMatrix(df[, c(1:2)], spread=FALSE, lty.smooth=2,
main="Матрица диаграмм рассеяния")
paste0('Количество переменных = ', length(longley))
paste0('Объем выборки = ', nrow(longley))
summary(longley)
cor(longley)
plot(longley$Employed, longley$Unemployed, type='l')
plot(longley$Year, longley$Employed, type='l')
plot(longley$Year, longley$Unemployed, type='l')
plot(longley$Year, longley$Armed.Forces, type='l')
plot(longley$Year, longley$GNP, type='l')
plot(longley$Unemployed, longley$Armed.Forces)
library(car)
par(mfrow=c(2, 2))
qqPlot(longley$GNP)
df <- read.csv("Izrael.csv", sep=",", header=T,
fileEncoding="UTF-8")
df <- df[, -c(1:3)]; df <- t(df)
colnames(df) <- df[1, ]; df <- df[-1, -c(23:27)]
df[df == '..'] <- NA; df <- as.data.frame(df)
df <- data.frame(lapply(df, as.numeric)); rownames(df) <- 1989:2017
library(car)
scatterplotMatrix(df[, c(1:2)], spread=FALSE, lty.smooth=2,
main="Матрица диаграмм рассеяния")
plot(rownames(df), df[, 2], type = 'l', xlab = 'Год', ylab = 'Прирост ВВП (в %)')
plot(df$SP.POP.GROW, df[, 2], xlab = 'Прирост населения', ylab = 'Прирост ВВП')
cor.test(df$SP.POP.GROW, df[, 2])
plot(df$SP.POP.GROW, df$SL.UEM.BASC.ZS, xlab = 'Прирост населения',
ylab = 'Безработица среди граждан с базовым образованием')
View(df)
df <- read.csv("Belarus.csv", sep=",", header=T,
fileEncoding="UTF-8")
View(df)
df <- read.csv("Izrael.csv", sep=",", header=T,
fileEncoding="UTF-8")
View(df)
df <- read.csv("Belarus.csv", sep=",", header=T,
fileEncoding="UTF-8")
View(df)
df <- read.csv("Izrael.csv", sep=",", header=T,
fileEncoding="UTF-8")
View(df)
df <- read.csv("Izrael.csv", sep=",", header=T,
fileEncoding="UTF-8")
df <- read.csv("Belarus.csv", sep=",", header=T,
fileEncoding="UTF-8")
View(df)
df <- read.csv("Izrael.csv", sep=",", header=T,
fileEncoding="UTF-8")
View(df)
df <- read.csv("Belarus.csv", sep=",", header=T,
fileEncoding="UTF-8")
df2 <- read.csv("Izrael.csv", sep=",", header=T,
fileEncoding="UTF-8")
View(df)
View(df2)
df <- read.csv("Izrael2.csv", sep=",", header=T,
fileEncoding="UTF-8")
df <- read.csv("Izrael2.csv", sep=",", header=T,
fileEncoding="UTF-8")
View(df)
paste0('Количество переменных = ', length(longley))
paste0('Объем выборки = ', nrow(longley))
summary(longley)
cor(longley)
plot(longley$Employed, longley$Unemployed, type='l')
plot(longley$Year, longley$Employed, type='l')
plot(longley$Year, longley$Unemployed, type='l')
plot(longley$Year, longley$Armed.Forces, type='l')
plot(longley$Year, longley$GNP, type='l')
plot(longley$Unemployed, longley$Armed.Forces)
library(car)
par(mfrow=c(2, 2))
qqPlot(longley$GNP)
paste0('Количество переменных = ', length(longley))
paste0('Объем выборки = ', nrow(longley))
summary(longley)
cor(longley)
plot(longley$Employed, longley$Unemployed, type='l')
plot(longley$Year, longley$Employed, type='l')
plot(longley$Year, longley$Unemployed, type='l')
plot(longley$Year, longley$Armed.Forces, type='l')
plot(longley$Year, longley$GNP, type='l')
plot(longley$Unemployed, longley$Armed.Forces)
library(car)
par(mfrow=c(2, 2))
qqPlot(longley$GNP)
df <- read.csv("Izrael2.csv", sep=",", header=T,
fileEncoding="UTF-8")
df <- df[, -c(1:3)]; df <- t(df)
colnames(df) <- df[1, ]; df <- df[-1, -c(23:27)]
df[df == '..'] <- NA; df <- as.data.frame(df)
df <- data.frame(lapply(df, as.numeric)); rownames(df) <- 1989:2017
library(car)
scatterplotMatrix(df[, c(1:2)], spread=FALSE, lty.smooth=2,
main="Матрица диаграмм рассеяния")
plot(rownames(df), df[, 2], type = 'l', xlab = 'Год', ylab = 'Прирост ВВП (в %)')
plot(df$SP.POP.GROW, df[, 2], xlab = 'Прирост населения', ylab = 'Прирост ВВП')
cor.test(df$SP.POP.GROW, df[, 2])
plot(df$SP.POP.GROW, df$SL.UEM.BASC.ZS, xlab = 'Прирост населения',
ylab = 'Безработица среди граждан с базовым образованием')
# cor.test(df$SP.POP.GROW, df$SL.UEM.BASC.ZS)
par(mfrow=c(1, 2))
plot(df$SP.POP.GROW, df$SP.DYN.LE00.IN, xlab = 'Прирост населения',
ylab = 'Продолжительность жизни')
cor.test(df$SP.POP.GROW, df$SP.DYN.LE00.IN)
plot(df$SP.POP.GROW, df$SP.DYN.CDRT.IN, xlab = 'Прирост населения',
ylab = 'Смертность (на 1000 чел.)')
cor.test(df$SP.POP.GROW, df$SP.DYN.CDRT.IN)
plot(df$SE.TER.CUAT.BA.ZS, df$NE.EXP.GNFS.KD.ZG, xlab = 'Люди с высшим образованием',
ylab = 'Экспорт товаров')
# cor.test(df$SE.TER.CUAT.BA.ZS, df$NE.EXP.GNFS.KD.ZG)
plot(df$SE.TER.CUAT.BA.ZS, df$NV.MNF.TECH.ZS.UN, xlab = 'Люди с высшим образованием',
ylab = 'Высокотехнологичное производство')
# cor.test(df$SE.TER.CUAT.BA.ZS, df$NV.MNF.TECH.ZS.UN)
par(mfrow=c(1, 1))
plot(df$SE.XPD.TOTL.GD.ZS, df$SE.TER.CUAT.BA.FE.ZS, xlab = 'Расходы на высшее образование',
ylab = 'Кумулятивный прирост бакалавров среди женщин (в %)')
# cor.test(df$SE.XPD.TOTL.GD.ZS, df$SE.TER.CUAT.BA.FE.ZS)
plot(df$SE.TER.CUAT.BA.ZS, df$IP.JRN.ARTC.SC, xlab = 'Люди с высшим образованием',
ylab = 'Статьи в научных и технических журналах')
# cor.test(df$SE.TER.CUAT.BA.ZS, df$IP.JRN.ARTC.SC)
library(ellipse)
plotcorr(cor(df))
image(1:ncol(cor(df)), 1:nrow(cor(df)), cor(df), col = rainbow(22), axes = F,
xlab = '', ylab = '')
axis(1, at = 1:ncol(cor(df)), labels=colnames(cor(df)), las = 2)
axis(2, at = 1:nrow(cor(df)), labels=rownames(cor(df)), las = 1)
fit <- lm(SP.DYN.LE00.IN ~ SP.POP.GROW, df)
plot(df$SP.POP.GROW, df$SP.DYN.LE00.IN, xlab="Прирост населения",
ylab="Продолжительность жизни", col="blue")
abline(fit, col="red")
scatterplotMatrix(df[, c(12, 13)], spread=FALSE, lty.smooth=2)
plot(df$SP.POP.GROW, predict(fit), xlab="Прирост населения", ylab="Продолжительность жизни")
abline(fit, col = "green")
library(igraph)
# Ввод данных
N <- 4
K <- 5
# Создание графа
g <- make_empty_graph(N)
# Добавление ребер
edges <- data.frame(
v1 = c(1, 2, 3, 4, 2),
v2 = c(2, 3, 4, 1, 4),
w = c(1, 2, 1, 3, 2)
)
g <- g + graph_from_data_frame(edges, directed = FALSE)
library(igraph)
# Ввод данных
N <- 4
K <- 5
# Создание графа
g <- make_empty_graph(N)
# Добавление ребер
edges <- data.frame(
v1 = c(1, 2, 3, 4, 2),
v2 = c(2, 3, 4, 1, 4),
w = c(1, 2, 1, 3, 2)
)
g <- g + graph_from_data_frame(edges, directed = FALSE)
library(igraph)
# Ввод данных
N <- 4
K <- 5
# Создание графа
g <- make_empty_graph(N)
# Добавление ребер
edges <- data.frame(
v1 = c(1, 2, 3, 4, 2),
v2 = c(2, 3, 4, 1, 4),
w = c(1, 2, 1, 3, 2)
)
g <- add_edges(g, edges)
library(igraph)
# Ввод данных
N <- 4
K <- 5
# Создание графа
g <- make_empty_graph(N)
# Добавление ребер
edges <- as.matrix(data.frame(
v1 = c(1, 2, 3, 4, 2),
v2 = c(2, 3, 4, 1, 4),
w = c(1, 2, 1, 3, 2)
))
g <- add_edges(g, edges)
# Установка библиотеки igraph
install.packages("igraph")
library(igraph)
# Ввод количества домов и дорог
n <- as.integer(readline(prompt = "Введите количество домов: "))
# Создание пустого графа
g <- graph.empty(n, directed = FALSE)
install.packages("igraph")
# Установка библиотеки igraph
library(igraph)
# Ввод количества домов и дорог
n <- as.integer(readline(prompt = "Введите количество домов: "))
# Создание пустого графа
g <- graph.empty(n, directed = FALSE)
# Установка библиотеки igraph
library(igraph)
# Ввод количества домов и дорог
n <- 5
k <- 5
# Создание пустого графа
g <- graph.empty(n, directed = FALSE)
# Добавление рёбер
edges <- as.matrix(data.frame(
v1 = c(1, 2, 3, 4, 2),
v2 = c(2, 3, 4, 1, 4),
w = c(1, 2, 1, 3, 2)
))
edges_vec <- c(edges[,1], edges[,2])
g <- add_edges(g, edges_vec)
# Поиск центра графа
dists <- distances(g, v = V(g), to = V(g))
min_sum_dist <- Inf
center <- 1
for (v in V(g)) {
sum_dist <- sum(dists[v,])
if (sum_dist < min_sum_dist) {
min_sum_dist <- sum_dist
center <- v
}
}
# Вывод результата
cat("Номер дома, в котором нужно встретиться: ", center, "\n")
